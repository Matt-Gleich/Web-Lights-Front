{"version":3,"sources":["index.js"],"names":["database","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Lights","props","radioChanged","changeEvent","setState","checked","target","value","ref","set","parseInt","componentWillMount","tthis","on","snapshot","val","console","log","state","lightlist","i","push","this","onChange","type","name","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gNAeMA,G,MADKC,SAASC,cAVC,CACjBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,wCAIST,YACdU,E,YACF,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAGVC,aAAe,SAACC,GACd,EAAKC,SAAS,CACVC,QAASF,EAAYG,OAAOC,QAE9BjB,EAASkB,IAAI,iBAAiBC,IAAIC,SAASP,EAAYG,OAAOC,SAR7C,EAUvBI,mBAAqB,WACjB,IAAIC,EAAK,eACVtB,EAASkB,IAAI,iBAAiBK,GAAG,QAAS,SAASC,GACpDF,EAAMR,SAAS,CAACC,QAASS,EAASC,QAClCC,QAAQC,IAAIH,EAASC,UAZjB,EAAKG,MAAQ,CAACb,QAAS,GAFN,E,sEAmBf,IADA,IAAIc,EAAU,GACNC,EAAE,EAAEA,EAAE,EAAEA,IACZD,EAAUE,KAAK,2BAAOhB,QAASiB,KAAKJ,MAAMb,UAAWe,EAAIG,SAAUD,KAAKpB,aAAcsB,KAAK,QAAQC,KAAK,sBAAsBC,GAAI,QAAQN,EAAGb,MAAOa,KAE1J,OACN,yBAAKM,GAAG,iBACPP,O,GAzBoBQ,IAAMC,WA+B3BC,IAASC,OAAO,kBAAC9B,EAAD,MAAmB+B,SAASC,eAAe,U","file":"static/js/main.c2719090.chunk.js","sourcesContent":["/*global firebase*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC8df5mz2u5oKo5pkQTBS9nIdogUFr2Hs8\",\n    authDomain: \"weblights-513e2.firebaseapp.com\",\n    databaseURL: \"https://weblights-513e2.firebaseio.com\",\n    projectId: \"weblights-513e2\",\n    storageBucket: \"\",\n    messagingSenderId: \"611763934422\",\n    appId: \"1:611763934422:web:520fd38969eb7b45\"\n  };\n  // Initialize Firebase\n  let fb = firebase.initializeApp(firebaseConfig);\n  var database = fb.database();\nclass Lights extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {checked: 0};\n    }\n  radioChanged = (changeEvent) => {\n    this.setState({\n        checked: changeEvent.target.value\n      });\n      database.ref('lights/active').set(parseInt(changeEvent.target.value));\n  }\ncomponentWillMount = () => {\n    let tthis = this\n   database.ref('lights/active').on('value', function(snapshot) {\n  tthis.setState({checked: snapshot.val()})\n  console.log(snapshot.val())\n});\n}\n    render() {\n        let lightlist=[]\n        for(let i=1;i<4;i++) {\n            lightlist.push(<input checked={this.state.checked===(i)} onChange={this.radioChanged} type=\"radio\" name=\"traffic-light-color\" id={\"color\"+i} value={i} />)\n        }\n      return (\n<div id=\"traffic-light\">\n{lightlist}\n</div>\n      );\n    }\n  }\n\nReactDOM.render(<Lights></Lights>, document.getElementById('root'));\n"],"sourceRoot":""}